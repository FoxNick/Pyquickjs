name: Test and build

on:
  - push
#  - create
#    ref_type: tag

jobs:
  build-linux:
    strategy:
      fail-fast: false
      matrix:
        image-name:
          - manylinux2014
          - manylinux_2_24
        image-arch:
          - x86_64
        py-version:
          - [3, 7]
          - [3, 8]
          - [3, 9]
          - [3, 10]
    runs-on: ubuntu-latest
    container:
      image: quay.io/pypa/${{ matrix.image-name }}_${{ matrix.image-arch }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - run: pipx install poetry
      - run: echo "::set-output name=v::$(poetry --version | cut -d' ' -f3)"
        id: poetry-version
      - uses: actions/cache@v3
        id: cache-poetry
        with:
          path: |
            ./.venv
            ~/.cache/pypoetry
          key: ${{ matrix.image-name }}_${{ matrix.image-arch }}-py${{ matrix.py-version[0] }}.${{ matrix.py-version[1] }}-po${{ steps.poetry-version.outputs.v }}-lock${{ hashFiles('poetry.lock') }}
      - run: poetry config --local virtualenvs.in-project true
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      - run: poetry env use python${{ matrix.py-version[0] }}.${{ matrix.py-version[1] }}
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      - run: poetry install
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      - run: make test
  build-macos:
    strategy:
      fail-fast: false
      matrix:
        arch:
          - macos-11
          - macos-12
        py-version:
          - [3, 7]
          - [3, 8]
          - [3, 9]
          - [3, 10]
    runs-on: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.py-version[0] }}.${{ matrix.py-version[1] }}
      - run: pip install poetry
      - run: echo "::set-output name=v::$(poetry --version | cut -d' ' -f3)"
        id: poetry-version
      - uses: actions/cache@v3
        id: cache-poetry
        with:
          path: |
            ./.venv
            ~/.cache/pypoetry
          key: ${{ matrix.arch }}-py${{ matrix.py-version[0] }}.${{ matrix.py-version[1] }}-po${{ steps.poetry-version.outputs.v }}-lock${{ hashFiles('poetry.lock') }}
      - run: poetry config --local virtualenvs.in-project true
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      - run: poetry env use python${{ env.py-version-str }}
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      - run: poetry install
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      - run: make test
